# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches:
      - 'releases/v*'
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
          - goarch: amd64
            goos: windows
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.19.1"
      - name: Making ctyun-oos-upload
        run: |
          go mod tidy
          go build -o ctyun-oos-upload -v
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
      - name: Uploading assets...
        if: ${{ !env.ACT }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./ctyun-oos-upload-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_name: ctyun-oos-upload-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_content_type: application/gzip
